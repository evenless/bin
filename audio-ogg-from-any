#!/bin/bash

# Convert any audio file to ogg

source bash-helpers

dst_type=ogg

if [[ "$1" = "-m" ]] ; then
    dst_type=mp3
    shift
fi

file="$@" 

if [[ ! $file ]] ; then
    DIE "Specify audio file"
fi

file=$(abs $file)

file_prefix=$(filename $file)
file_type=$(extension $file)

perl -e 'exit 1 if "'$file_type'" !~ /(ogg|mp3|flac|wav|mp4|m4a)$/i' \
    || RETURN "Unknown music file format for $file - skipping\n"

INFO "Converting to $dst_type"

# NOTE: not possible with snaps?: uses /tmp/snap.ffmpeg/tmp when specifying /tmp
# tmp=$(mktemp -d)/transcode.flac

tmp=temp-audio-ogg-from-any.flac 

trap 'echo "ERROR - running CLEANUP..." ; test -e "$out_file" && rm -f "$out_file"' ERR

INFO "Transcoding file: $file / type: $file_type to $dst_type"
DEBUG "Using temp file: $tmp"

# pipe does not save the tags
# sox $file -t wav - | oggenc -q6 -o $x.ogg -

if [[ $file_type = $dst_type ]] ; then
    RETURN "File is already an $dst_type file"
fi

out_file="$file".$dst_type

# save to flac first to keep the tags
# cannot convert to ogg directly because I don't know 
# how to specify the ogg quality level with avconv

if [[ $dst_type = ogg ]] ; then
    if [[ $file_type != flac ]] ; then
        DEBUG "Transcoding $file to flac"
        # sox $file -t flac $tmp
        ffmpeg -i "$file" $tmp
        _file="$file"
        file="$tmp"
        tmp="$_file"
    fi
fi

# remove old extension if old format was lossless
# if [[ $file_type = flac || $file_type = ape ]] ; then
#   out_file="$file_prefix".ogg
# fi

DEBUG "Transcoding $file to $dst_type"

INFO "dst_type: $dst_type"

if [[ $dst_type = ogg ]] ; then
    oggenc -q6 -o "$out_file" "$file"
else
    # sox does not copy tags
    # sox "$tmp" -C192 "$file.$dst_type"

    # cannot read flac
    # lame -h "$tmp" "$file.$dst_type"

    # avconv -i "$file" -c:a libmp3lame -b:a 192k -id3v2_version 3 -write_id3v1 1 "$file.$dst_type"
    # the -map_metadata is used to copy the tag...:
    # https://stackoverflow.com/questions/21489719/avconv-flac-to-ogg-conversion-with-metadata-kept
    ffmpeg -loglevel quiet -i "$file" -vn -c:a libmp3lame -b:a 192k -map_metadata 0:s:0 "$out_file"
fi

if [[ -e $tmp ]] ; then
    rm $tmp
fi

rm "$file"

DEBUG "Done"


