#!/usr/bin/env perl

# Search for a debian package, sort by ranking, add description

use strict;
use warnings;
no warnings 'uninitialized';
use autodie;
use File::stat;

my %apps = ();
open( F, qq{apt-cache search --names-only "@{[ join(" ", @ARGV) ]}" |} );
while (<F>) {
    my ( $app, $desc ) = /^(.+?) - (.+)$/;
    next if $app =~ /^lib/;
    $apps{$app}{exists} = 1;
}

my %ranks = ();

my $pop_file = "/tmp/apt-pop";

if ( -e $pop_file ) {
    if ( stat($pop_file)->ctime < time() - 86400 ) {
        qx{wget -qqO- http://popcon.debian.org/by_inst.gz | gunzip > $pop_file}
            && die $!;
    }
}

open( F, $pop_file );
while (<F>) {
    my ( $rank, $app ) = /^(\d+)\s+(\S+)/;

    next if $app =~ /^lib/;

    next if !$app;
    next if !exists $apps{$app};

    $apps{$app}{ranked} = 1;
    $ranks{$rank} = { app => $app };
}

# add apps without a ranking
my $i = 0;
foreach my $app ( keys %apps ) {
    $i++;
    $ranks{"$i"} = { app => $app }
        if !exists $apps{$app}{ranked};
}

print "\n";

foreach my $rank ( sort { $a <=> $b } keys %ranks ) {
    my $app = $ranks{$rank}{app};
    my ($desc) = `apt-cache show $app` =~ /^Description.*?\:(.+?)\n\S/igsm;
    $desc =~ s/^\s+\.$//gm;
    my $header = "### $app " . ( "#" x ( $ENV{COLUMNS} - length($app) - 5 ) );
    print "$header\n\n$desc\n\n";
}
